import java.util.Stack;

public class Solution2 {
    /*
    heights	        return
    [6,9,5,7,4]	    [0,0,2,2,4]
    [3,9,9,3,5,7,2]	[0,0,0,3,3,3,6]
    [1,5,3,6,7,6,5]	[0,0,2,0,0,5,6]
     */

    class Tower{
        int idx;
        int height;
        public Tower(int idx, int height){
            this.idx = idx;
            this.height = height;
        }
    }

    public int[] solution(int[] heights) {
        int[] answer = new int[heights.length];
        Stack<Tower> st = new Stack<>();

        for(int i = 0 ; i < heights.length; i++){
            Tower tower = new Tower(i+1, heights[i]);
            while(!st.isEmpty()){
                Tower top = st.peek();
                if(top.height > tower.height){
                    answer[i] = top.idx;
                    System.out.println("here1");
                    break;
                }else{
                    System.out.println("here2");
                    st.pop();
                }
            }
            st.push(tower);
        }
        return answer;
    }

    public static void main(String[] argv){
        Solution2 sl = new Solution2();
//        String test = "ababcdcdababcdcd";
        int[] tmp = {6,9,5,7,4};
        System.out.println(sl.solution(tmp));


    }
}
